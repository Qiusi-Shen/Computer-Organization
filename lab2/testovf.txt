1) with -O2

testovf:
.LFB0:
        .cfi_startproc
        xorl    %eax, %eax
        ret
        .cfi_endproc

the compiler simplely compile the file doesnt handle the overflow problem
So xorl is to clear the register and return 0
2) with -O2 -fwrapv

testovf:
.LFB0:
        .cfi_startproc
        movabsq $9223372036854775807, %rax
        addq    %rdi, %rax
        cmpq    %rax, %rdi
        setg    %al
        ret
        .cfi_endproc

the compiler compile the file and handle the overflow problem
9223372036854775807 is store in %rax
It assume the overflow problem is true.
3)
testovf:
.LFB0:
        .cfi_startproc
        pushq   %rbp
        .cfi_def_cfa_offset 16
        .cfi_offset 6, -16
        pushq   %rbx
        .cfi_def_cfa_offset 24
        .cfi_offset 3, -24
        movabsq $9223372036854775807, %rdx
        movq    %rdi, %rbp
        movq    %rdi, %rbx
        subq    $8, %rsp
        .cfi_def_cfa_offset 32
        addq    %rdx, %rbp
        jo      .L6
.L2:
        cmpq    %rbp, %rbx
        setg    %al
        addq    $8, %rsp
        .cfi_remember_state
        .cfi_def_cfa_offset 24
        popq    %rbx
        .cfi_def_cfa_offset 16
        popq    %rbp
        .cfi_def_cfa_offset 8
        ret
.L6:
        .cfi_restore_state
        movq    %rdi, %rsi
        movl    $.Lubsan_data0, %edi
        call    __ubsan_handle_add_overflow
        jmp     .L2
        .cfi_endproc
.LFE0:
        .size   testovf, .-testovf
        .section        .rodata.str1.1,"aMS",@progbits,1
.LC0:
        .string "lab2.c"
        .data
        .align 16
        .type   .Lubsan_data0, @object
        .size   .Lubsan_data0, 24
.Lubsan_data0:
        .quad   .LC0
        .long   4
        .long   14
        .quad   .Lubsan_type0
        .align 2
        .type   .Lubsan_type0, @object
        .size   .Lubsan_type0, 15

the compiler handles more problems. The compiler is to check overflow
and wrap the number. If it does overflow, then it calls a function to handle that overflow.
And there will a warning message. If it is not overflow just do the normal thing. 
